comments:
  # Names of required fields. If any of these isn't in the request or is
  # empty, an error will be thrown.
  requiredFields: ["name", "email", "message"]
  # Names of the fields the form is allowed to submit. If a field that is
  # not here is part of the request, an error will be thrown.
  allowedFields: ["name", "email", "url", "message", "replying_to"]
  # Name of the branch being used. Must match the one sent in the URL of the
  # request.
  branch: "source"
  # Text to use as the commit message or pull request title. Accepts placeholders.
  commitMessage: "Comment via StaticMan"
  # Destination path (directory) for the data files. Accepts placeholders.
  path: "_data/comments/{options.slug}"
  # Destination path (filename) for the data files. Accepts placeholders.
  filename: "comment-{@timestamp}"
  # The format of the generated data files. Accepted values are "json", "yaml"
  # or "frontmatter"
  format: "yaml"
  # List of fields to be populated automatically by Staticman and included in
  # the data file. Keys are the name of the field. The value can be an object
  # with a `type` property, which configures the generated field, or any value
  # to be used directly (e.g. a string, number or array)
  generatedFields:
    date:
      type: date
      options:
        format: "iso8601"
  moderation: true
  # List of transformations to apply to any of the fields supplied. Keys are
  # the name of the field and values are possible transformation types.
  transforms:
    email: md5
